{
  "info": {
    "name": "Task App API",
    "description": "Complete API collection for the Task App Express.js server with Clean Architecture. This collection includes all CRUD operations for todos with comprehensive test scenarios including happy paths and error cases.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string",
      "description": "Base URL for the Task App API server"
    },
    {
      "key": "sampleTodoId",
      "value": "todo-123",
      "type": "string",
      "description": "Sample todo ID for testing. Replace with actual ID from create todo response."
    }
  ],
  "item": [
    {
      "name": "Server Info",
      "description": "Basic server information and health check endpoints",
      "item": [
        {
          "name": "Get Server Info - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"]
            },
            "description": "Get basic server information including version, environment, and available endpoints"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/",
                  "host": ["{{baseUrl}}"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task App API Server\",\n  \"version\": \"1.0.0\",\n  \"environment\": \"development\",\n  \"database\": \"memory\",\n  \"endpoints\": {\n    \"health\": \"/api/health\",\n    \"todos\": \"/api/todos\",\n    \"documentation\": \"See README.md for API documentation\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Health Check - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health"]
            },
            "description": "Health check endpoint to verify server is running"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/health",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Server is running\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Todos - Read Operations",
      "description": "GET operations for retrieving todos with various filters and scenarios",
      "item": [
        {
          "name": "Get All Todos - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Retrieve all todos regardless of completion status"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"todo-123\",\n      \"title\": \"Complete project documentation\",\n      \"completed\": false,\n      \"priority\": \"high\",\n      \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n      \"dueDate\": \"2024-01-20T23:59:59.000Z\"\n    },\n    {\n      \"id\": \"todo-456\",\n      \"title\": \"Review pull request\",\n      \"completed\": true,\n      \"priority\": \"medium\",\n      \"createdAt\": \"2024-01-14T15:30:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Active Todos - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "active"]
            },
            "description": "Retrieve only active (not completed) todos"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/active",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "active"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"todo-123\",\n      \"title\": \"Complete project documentation\",\n      \"completed\": false,\n      \"priority\": \"high\",\n      \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n      \"dueDate\": \"2024-01-20T23:59:59.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Completed Todos - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/completed",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "completed"]
            },
            "description": "Retrieve only completed todos"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/completed",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "completed"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"todo-456\",\n      \"title\": \"Review pull request\",\n      \"completed\": true,\n      \"priority\": \"medium\",\n      \"createdAt\": \"2024-01-14T15:30:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Todo Statistics - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "stats"]
            },
            "description": "Get statistics about todos including total, active, and completed counts"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "stats"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"total\": 2,\n    \"active\": 1,\n    \"completed\": 1\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Todo by ID - Happy Path",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}"]
            },
            "description": "Retrieve a specific todo by its ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"todo-123\",\n    \"title\": \"Complete project documentation\",\n    \"completed\": false,\n    \"priority\": \"high\",\n    \"createdAt\": \"2024-01-15T10:00:00.000Z\",\n    \"dueDate\": \"2024-01-20T23:59:59.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Todo by ID - Not Found",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "nonexistent-id"]
            },
            "description": "Test error handling when requesting a todo that doesn't exist"
          },
          "response": [
            {
              "name": "Not Found Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/nonexistent-id",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "nonexistent-id"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Todo not found\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Todos - Create Operations",
      "description": "POST operations for creating new todos with various validation scenarios",
      "item": [
        {
          "name": "Create Todo - Happy Path (Minimal)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"New todo item\",\n  \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Create a new todo with only required fields and basic priority"
          },
          "response": [
            {
              "name": "Created Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"New todo item\",\n  \"priority\": \"medium\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"todo-789\",\n    \"title\": \"New todo item\",\n    \"completed\": false,\n    \"priority\": \"medium\",\n    \"createdAt\": \"2024-01-15T11:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Todo - Happy Path (All Fields)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete API documentation with examples\",\n  \"priority\": \"high\",\n  \"dueDate\": \"2024-01-25T18:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Create a new todo with all optional fields including due date"
          },
          "response": [
            {
              "name": "Created Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Complete API documentation with examples\",\n  \"priority\": \"high\",\n  \"dueDate\": \"2024-01-25T18:00:00.000Z\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"todo-101\",\n    \"title\": \"Complete API documentation with examples\",\n    \"completed\": false,\n    \"priority\": \"high\",\n    \"createdAt\": \"2024-01-15T11:15:00.000Z\",\n    \"dueDate\": \"2024-01-25T18:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Todo - Missing Title (Validation Error)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"priority\": \"low\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Test validation error when title is missing"
          },
          "response": [
            {
              "name": "Validation Error Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"priority\": \"low\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Validation failed\",\n  \"details\": [\n    {\n      \"code\": \"invalid_type\",\n      \"expected\": \"string\",\n      \"received\": \"undefined\",\n      \"path\": [\"title\"],\n      \"message\": \"Required\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create Todo - Title Too Short (Validation Error)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"x\",\n  \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Test validation error when title is too short (less than 2 characters)"
          },
          "response": [
            {
              "name": "Validation Error Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"x\",\n  \"priority\": \"medium\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Validation failed\",\n  \"details\": [\n    {\n      \"code\": \"too_small\",\n      \"minimum\": 2,\n      \"type\": \"string\",\n      \"inclusive\": true,\n      \"exact\": false,\n      \"message\": \"Title must be at least 2 characters\",\n      \"path\": [\"title\"]\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create Todo - Invalid Priority (Validation Error)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Valid todo title\",\n  \"priority\": \"urgent\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Test validation error when priority is not one of: low, medium, high"
          },
          "response": [
            {
              "name": "Validation Error Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Valid todo title\",\n  \"priority\": \"urgent\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Validation failed\",\n  \"details\": [\n    {\n      \"received\": \"urgent\",\n      \"code\": \"invalid_enum_value\",\n      \"options\": [\"low\", \"medium\", \"high\"],\n      \"path\": [\"priority\"],\n      \"message\": \"Invalid enum value. Expected 'low' | 'medium' | 'high', received 'urgent'\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Todos - Update Operations",
      "description": "PUT and PATCH operations for updating todos with various scenarios",
      "item": [
        {
          "name": "Update Todo - Happy Path (Full Update)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated todo title\",\n  \"completed\": true,\n  \"priority\": \"low\",\n  \"dueDate\": \"2024-01-30T12:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}"]
            },
            "description": "Update a todo with all possible fields"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated todo title\",\n  \"completed\": true,\n  \"priority\": \"low\",\n  \"dueDate\": \"2024-01-30T12:00:00.000Z\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Todo updated successfully\"\n}"
            }
          ]
        },
        {
          "name": "Update Todo - Partial Update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Partially updated title\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}"]
            },
            "description": "Update only specific fields of a todo"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Partially updated title\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Todo updated successfully\"\n}"
            }
          ]
        },
        {
          "name": "Update Todo - Not Found",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated title for non-existent todo\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "nonexistent-id"]
            },
            "description": "Test error handling when updating a todo that doesn't exist"
          },
          "response": [
            {
              "name": "Not Found Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated title for non-existent todo\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos/nonexistent-id",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "nonexistent-id"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Todo not found\",\n  \"code\": \"TODO_NOT_FOUND\"\n}"
            }
          ]
        },
        {
          "name": "Update Todo - Validation Error",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"x\",\n  \"priority\": \"invalid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}"]
            },
            "description": "Test validation error when updating with invalid data"
          },
          "response": [
            {
              "name": "Validation Error Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"x\",\n  \"priority\": \"invalid\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Validation failed\",\n  \"details\": [\n    {\n      \"code\": \"too_small\",\n      \"minimum\": 2,\n      \"type\": \"string\",\n      \"inclusive\": true,\n      \"exact\": false,\n      \"message\": \"Title must be at least 2 characters\",\n      \"path\": [\"title\"]\n    },\n    {\n      \"received\": \"invalid\",\n      \"code\": \"invalid_enum_value\",\n      \"options\": [\"low\", \"medium\", \"high\"],\n      \"path\": [\"priority\"],\n      \"message\": \"Invalid enum value. Expected 'low' | 'medium' | 'high', received 'invalid'\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Toggle Todo Completion - Happy Path",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}/toggle",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}", "toggle"]
            },
            "description": "Toggle the completion status of a todo (completed ↔ active)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123/toggle",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123", "toggle"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Todo toggled successfully\"\n}"
            }
          ]
        },
        {
          "name": "Toggle Todo Completion - Not Found",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/nonexistent-id/toggle",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "nonexistent-id", "toggle"]
            },
            "description": "Test error handling when toggling a todo that doesn't exist"
          },
          "response": [
            {
              "name": "Not Found Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/nonexistent-id/toggle",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "nonexistent-id", "toggle"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Todo not found\",\n  \"code\": \"TODO_NOT_FOUND\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Todos - Delete Operations",
      "description": "DELETE operations for removing todos with various scenarios",
      "item": [
        {
          "name": "Delete Todo - Happy Path",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/{{sampleTodoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "{{sampleTodoId}}"]
            },
            "description": "Delete a specific todo by ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/todo-123",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "todo-123"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"message\": \"Todo deleted successfully\"\n}"
            }
          ]
        },
        {
          "name": "Delete Todo - Not Found",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos", "nonexistent-id"]
            },
            "description": "Test error handling when deleting a todo that doesn't exist"
          },
          "response": [
            {
              "name": "Not Found Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos/nonexistent-id",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos", "nonexistent-id"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Todo not found\",\n  \"code\": \"TODO_NOT_FOUND\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "description": "Additional error handling and edge case scenarios",
      "item": [
        {
          "name": "404 - Unknown Route",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/unknown-endpoint",
              "host": ["{{baseUrl}}"],
              "path": ["api", "unknown-endpoint"]
            },
            "description": "Test handling of requests to non-existent API endpoints"
          },
          "response": [
            {
              "name": "Not Found Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/unknown-endpoint",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "unknown-endpoint"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Route not found\",\n  \"message\": \"The requested endpoint does not exist\"\n}"
            }
          ]
        },
        {
          "name": "Rate Limit Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Test rate limiting (send multiple requests rapidly to trigger limit - 100 requests per 15 minutes per IP)"
          },
          "response": [
            {
              "name": "Rate Limit Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Too many requests from this IP, please try again later.\"\n}"
            }
          ]
        },
        {
          "name": "Invalid JSON Body",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"title\": \"Invalid JSON body\" // missing closing quote and brace"
            },
            "url": {
              "raw": "{{baseUrl}}/api/todos",
              "host": ["{{baseUrl}}"],
              "path": ["api", "todos"]
            },
            "description": "Test handling of malformed JSON in request body"
          },
          "response": [
            {
              "name": "Bad Request Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \"title\": \"Invalid JSON body\" // missing closing quote and brace"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/todos",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "todos"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": \"Invalid JSON in request body\"\n}"
            }
          ]
        }
      ]
    }
  ]
}
